/*
Button With border

  <div id="downBrdArr">
    <div class="borderArrow">
        <div class="contentArrow">
           <i class="fa fa-arrow-down" aria-hidden="true"></i>
        </div>
    </div>
  </div>
 */

@mixin corner-borders($corner-width: 1px, $corner-size: 5px, $color-border: grey, $color-background: white) {
  position: relative;
  border: $corner-width solid $color-border;
  background-color: $color-background;

  &::before {
    content: "";
    z-index: 1;
    position: absolute;
    top: -$corner-width;
    bottom: -$corner-width;
    left: $corner-size;
    right: $corner-size;
    background-color: $color-background;
  }

  &::after {
    content: "";
    z-index: 0;
    position: absolute;
    top: $corner-size;
    bottom: $corner-size;
    left: -$corner-width;
    right: -$corner-width;
    background-color: $color-background;
  }
}

#downBrdArr {
  .borderArrow {
    display: inline-block;
    z-index: 10;

    @include corner-borders(9px, 12px, $theme-dark, $theme-primary);
  }

  .contentArrow {
    box-sizing: border-box;
    position: relative;
    padding: 1px;
    width: 34px;
    height: 34px;
    z-index: 2;
    margin: 0;
  }

  .fa {
    font-size: 26pt;
    color: $theme-dark;
  }
}

#faHome:hover {
  text-decoration: none;
  color: $theme-tertiary;
  font-weight: 500;
}

/*
<div class="arrow bounce">
  <a class="fa fa-arrow-down fa-2x" href="#"></a>
</div>
 */

#mastArrow {
  position: absolute;
  bottom: 50px;
  right: 50px;
  margin: auto;
  visibility: visible;
}

.arrow {
  text-align: center;
  margin: 5% 0;

  a {
    font-size: 18px;
    color: white;
    text-decoration: none;
  }
}

.bounce {
  animation: bounce 2.5s infinite;
}

@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }

  40% {
    transform: translateY(-20px);
  }

  60% {
    transform: translateY(-10px);
  }
}

/*
More Button
 */

//=== Drawing effect

@mixin btn-border-drawing($color: #ccc, $hover: black, $width: 3px, $vertical: top, $horizontal: left, $duration: 0.8s) {
  box-shadow: inset 0 0 0 $width $color;
  color: $color;
  transition: color $duration $duration/3;
  position: relative;

  &::before,
  &::after {
    border: 0 solid transparent;
    box-sizing: border-box;
    content: '';
    pointer-events: none;
    position: absolute;
    width: 0;
    height: 0;
    #{$vertical}: 0;
    #{$horizontal}: 0;
  }

  &::before {
    $h-side: if($horizontal == 'left', 'right', 'left');

    border-#{$vertical}-width: $width;
    border-#{$h-side}-width: $width;
  }

  &::after {
    $v-side: if($vertical == 'top', 'bottom', 'top');

    border-#{$v-side}-width: $width;
    border-#{$horizontal}-width: $width;
  }

  &:hover {
    color: $hover;

    &::before,
    &::after {
      border-color: $hover;
      transition: border-color 0s, width $duration, height $duration;
      width: 100%;
      height: 100%;
    }

    &::before {
      transition-delay: 0s, 0s, $duration;
    }

    &::after {
      transition-delay: 0s, $duration, 0s;
    }
  }
}

.draw-border {
  @include btn-border-drawing($theme-tertiary, $theme-secondary, 4px, bottom, right);
}

//=== Button styling, semi-ignore
.moreBtn {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 20px;
  font-weight: 700;
  color: $theme-tertiary;
  letter-spacing: 2.46px;
  line-height: 24px;
  padding: 0.6em 1.3em;
  text-transform: uppercase;

  &:focus {
    //outline: 2px dotted $theme-tertiary;
    outline: none;
  }
}
